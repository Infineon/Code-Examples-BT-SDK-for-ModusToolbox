/***************************************************************************//**
* File Name: cycfg_gatt_db.h
* Version: 1.1
*
* Description:
* Definitions for constants used in the device's GATT database and function
* prototypes.
* This file should not be modified. It was automatically generated by
* Bluetooth Configurator 1.1.0 build 216
*
********************************************************************************
* Copyright 2019 Cypress Semiconductor Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#if !defined(CYCFG_GATT_DB_H)
#define CYCFG_GATT_DB_H

#include "stdint.h"
#include "wiced_bt_ota_firmware_upgrade.h"

#define __UUID_SERVICE_GENERIC_ACCESS                             0x1800u
#define __UUID_CHARACTERISTIC_DEVICE_NAME                         0x2A00u
#define __UUID_CHARACTERISTIC_APPEARANCE                          0x2A01u
#define __UUID_SERVICE_GENERIC_ATTRIBUTE                          0x1801u
#define __UUID_SERVICE_ENVIRONMENTAL_SENSING                      0x181Au
#define __UUID_CHARACTERISTIC_TEMPERATURE                         0x2A6Eu
#define __UUID_DESCRIPTOR_CLIENT_CHARACTERISTIC_CONFIGURATION     0x2902u
#define __UUID_DESCRIPTOR_ENVIRONMENTAL_SENSING_MEASUREMENT       0x290Cu
#define __UUID_DESCRIPTOR_VALID_RANGE                             0x2906u

#define __UUID_SERVICE_FWUPGRADESERVICE                                  0x1Fu, 0x38u, 0xA1u, 0x38u, 0xADu, 0x82u, 0x35u, 0x86u, 0xA0u, 0x43u, 0x13u, 0x5Cu, 0x47u, 0x1Eu, 0x5Du, 0xAEu
#define __UUID_CHARACTERISTIC_FWUPGRADESERVICE_FWUPGRADECONTOLPOINT      0x1Bu, 0x66u, 0x6Cu, 0x08u, 0x0Au, 0x57u, 0x8Eu, 0x83u, 0x99u, 0x4Eu, 0xA7u, 0xF7u, 0xBFu, 0x50u, 0xDDu, 0xA3u
#define __UUID_CHARACTERISTIC_FWUPGRADESERVICE_FWUPGRADEDATA             0x26u, 0xFEu, 0x2Eu, 0xE7u, 0x09u, 0x24u, 0x4Fu, 0xB7u, 0x91u, 0x40u, 0x61u, 0xD9u, 0x7Au, 0x6Cu, 0xE8u, 0xA2u

/* Service Generic Access */
#define HDLS_GAP                                                  0x0001u
/* Characteristic Device Name */
#define HDLC_GAP_DEVICE_NAME                                      0x0002u
#define HDLC_GAP_DEVICE_NAME_VALUE                                0x0003u
/* Characteristic Appearance */
#define HDLC_GAP_APPEARANCE                                       0x0004u
#define HDLC_GAP_APPEARANCE_VALUE                                 0x0005u

/* Service Generic Attribute */
#define HDLS_GATT                                                 0x0006u

/* Service Environmental Sensing */
#define HDLS_ESS                                                  0x0007u
/* Characteristic Temperature */
#define HDLC_ESS_TEMPERATURE                                      0x0008u
#define HDLC_ESS_TEMPERATURE_VALUE                                0x0009u
/* Descriptor Client Characteristic Configuration */
#define HDLD_ESS_TEMPERATURE_CLIENT_CHAR_CONFIG                   0x000Au
/* Descriptor Environmental Sensing Measurement */
#define HDLD_ESS_TEMPERATURE_ENVIRONMENTAL_SENSING_MEASUREMENT    0x000Bu
/* Descriptor Valid Range */
#define HDLD_ESS_TEMPERATURE_VALID_RANGE                          0x000Cu

/* Service FWUpgradeService */
#define HDLS_FWUPGRADESERVICE                                            HANDLE_OTA_FW_UPGRADE_SERVICE
/* Characteristic FWUpgradeContolPoint */
#define HDLC_FWUPGRADESERVICE_FWUPGRADECONTOLPOINT                       HANDLE_OTA_FW_UPGRADE_CHARACTERISTIC_CONTROL_POINT
#define HDLC_FWUPGRADESERVICE_FWUPGRADECONTOLPOINT_VALUE                 HANDLE_OTA_FW_UPGRADE_CONTROL_POINT
/* Descriptor Client Characteristic Configuration */
#define HDLD_FWUPGRADESERVICE_FWUPGRADECONTOLPOINT_CLIENT_CHAR_CONFIG    HANDLE_OTA_FW_UPGRADE_CLIENT_CONFIGURATION_DESCRIPTOR
/* Characteristic FWUpgradeData */
#define HDLC_FWUPGRADESERVICE_FWUPGRADEDATA                              HANDLE_OTA_FW_UPGRADE_CHARACTERISTIC_DATA
#define HDLC_FWUPGRADESERVICE_FWUPGRADEDATA_VALUE                        HANDLE_OTA_FW_UPGRADE_DATA

/* External Lookup Table Entry */
typedef struct
{
    uint16_t handle;
    uint16_t max_len;
    uint16_t cur_len;
    uint8_t  *p_data;
} gatt_db_lookup_table_t;

/* External definitions */
extern const uint8_t  gatt_database[];
extern const uint16_t gatt_database_len;
extern gatt_db_lookup_table_t app_gatt_db_ext_attr_tbl[];
extern const uint16_t app_gatt_db_ext_attr_tbl_size;
extern uint8_t app_gap_device_name[];
extern const uint16_t app_gap_device_name_len;
extern uint8_t app_gap_appearance[];
extern const uint16_t app_gap_appearance_len;
extern uint8_t app_ess_temperature[];
extern const uint16_t app_ess_temperature_len;
extern uint8_t app_ess_temperature_client_char_config[];
extern const uint16_t app_ess_temperature_client_char_config_len;
extern uint8_t app_ess_temperature_environmental_sensing_measurement[];
extern const uint16_t app_ess_temperature_environmental_sensing_measurement_len;
extern uint8_t app_ess_temperature_valid_range[];
extern const uint16_t app_ess_temperature_valid_range_len;
extern uint8_t app_fwupgradeservice_fwupgradecontolpoint[];
extern const uint16_t app_fwupgradeservice_fwupgradecontolpoint_len;
extern uint8_t app_fwupgradeservice_fwupgradecontolpoint_client_char_config[];
extern const uint16_t app_fwupgradeservice_fwupgradecontolpoint_client_char_config_len;
extern uint8_t app_fwupgradeservice_fwupgradedata[];
extern const uint16_t app_fwupgradeservice_fwupgradedata_len;

#endif /* CYCFG_GATT_DB_H */
